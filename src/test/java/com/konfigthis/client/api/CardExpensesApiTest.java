/*
 * Expenses API
 *  The Expenses API allows you to manage accounting and expenses information. 
 *
 * The version of the OpenAPI document: 0.1
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ExpandableExpense;
import com.konfigthis.client.model.Expense;
import com.konfigthis.client.model.ExpensePaymentStatus;
import com.konfigthis.client.model.ExpenseStatus;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.PageExpandableExpense;
import com.konfigthis.client.model.UpdateExpenseRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardExpensesApi
 */
@Disabled
public class CardExpensesApiTest {

    private static CardExpensesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CardExpensesApi(apiClient);
    }

    /**
     * Get an expense
     *
     * Get an expense by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String expenseId = null;
        List<String> expand = null;
        ExpandableExpense response = api.getById(expenseId)
                .expand(expand)
                .execute();
        // TODO: test validations
    }

    /**
     * List expenses
     *
     * List expenses under the same account. Admin and bookkeeper have access to any expense, and regular users can only access their own.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        List<String> expand = null;
        List<String> userId = null;
        List<String> parentExpenseId = null;
        List<String> budgetId = null;
        List<ExpenseStatus> status = null;
        List<ExpensePaymentStatus> paymentStatus = null;
        OffsetDateTime purchasedAtStart = null;
        OffsetDateTime purchasedAtEnd = null;
        String cursor = null;
        Integer limit = null;
        PageExpandableExpense response = api.list()
                .expand(expand)
                .userId(userId)
                .parentExpenseId(parentExpenseId)
                .budgetId(budgetId)
                .status(status)
                .paymentStatus(paymentStatus)
                .purchasedAtStart(purchasedAtStart)
                .purchasedAtEnd(purchasedAtEnd)
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an expense
     *
     * Update an expense. Admin and bookkeeper have access to any expense, and regular users can only access their own.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExpenseTest() throws ApiException {
        String expenseId = null;
        String memo = null;
        Expense response = api.updateExpense(expenseId)
                .memo(memo)
                .execute();
        // TODO: test validations
    }

}
